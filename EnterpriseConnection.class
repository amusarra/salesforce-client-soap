public class EnterpriseConnection
{
  private TypeMapper __typeMapper = new TypeMapper();
  private ConnectorConfig __config;
  private HashMap<QName, XMLizable> __extraHeaders = new HashMap();
  private LoginScopeHeader_element __LoginScopeHeader;
  
  public ConnectorConfig getConfig() { return __config; }
  
  private AllOrNoneHeader_element __AllOrNoneHeader;
  private MruHeader_element __MruHeader;
  private UserTerritoryDeleteHeader_element __UserTerritoryDeleteHeader;
  
  public void setLoginScopeHeader(String organizationId, String portalId) { __LoginScopeHeader = new LoginScopeHeader_element();
    __LoginScopeHeader.setOrganizationId(organizationId);
    __LoginScopeHeader.setPortalId(portalId);
  }
  

  public void clearLoginScopeHeader() { __LoginScopeHeader = null; }
  
  private OwnerChangeOptions_element __OwnerChangeOptions;
  
  public LoginScopeHeader_element getLoginScopeHeader() { return __LoginScopeHeader; }
  
  private DuplicateRuleHeader_element __DuplicateRuleHeader;
  
  public void __setLoginScopeHeader(LoginScopeHeader_element __header) { __LoginScopeHeader = __header; }
  
  private StreamingEnabledHeader_element __StreamingEnabledHeader;
  private AllowFieldTruncationHeader_element __AllowFieldTruncationHeader;
  
  public void setAllOrNoneHeader(boolean allOrNone) {
    __AllOrNoneHeader = new AllOrNoneHeader_element();
    __AllOrNoneHeader.setAllOrNone(allOrNone);
  }
  

  public void clearAllOrNoneHeader() { __AllOrNoneHeader = null; }
  
  private LimitInfoHeader_element __LimitInfoHeader;
  
  public AllOrNoneHeader_element getAllOrNoneHeader() { return __AllOrNoneHeader; }
  
  private DebuggingInfo_element __DebuggingInfo;
  
  public void __setAllOrNoneHeader(AllOrNoneHeader_element __header) { __AllOrNoneHeader = __header; }
  
  private AssignmentRuleHeader_element __AssignmentRuleHeader;
  private DisableFeedTrackingHeader_element __DisableFeedTrackingHeader;
  
  public void setMruHeader(boolean updateMru) {
    __MruHeader = new MruHeader_element();
    __MruHeader.setUpdateMru(updateMru);
  }
  
  public void clearMruHeader() {
    __MruHeader = null;
  }
  

  public MruHeader_element getMruHeader() { return __MruHeader; }
  
  private LocaleOptions_element __LocaleOptions;
  
  public void __setMruHeader(MruHeader_element __header) { __MruHeader = __header; }
  
  private DebuggingHeader_element __DebuggingHeader;
  private PackageVersionHeader_element __PackageVersionHeader;
  
  public void setUserTerritoryDeleteHeader(String transferToUserId) {
    __UserTerritoryDeleteHeader = new UserTerritoryDeleteHeader_element();
    __UserTerritoryDeleteHeader.setTransferToUserId(transferToUserId);
  }
  
  public void clearUserTerritoryDeleteHeader() {
    __UserTerritoryDeleteHeader = null;
  }
  
  public UserTerritoryDeleteHeader_element getUserTerritoryDeleteHeader() {
    return __UserTerritoryDeleteHeader;
  }
  

  public void __setUserTerritoryDeleteHeader(UserTerritoryDeleteHeader_element __header) { __UserTerritoryDeleteHeader = __header; }
  
  private SessionHeader_element __SessionHeader;
  private QueryOptions_element __QueryOptions;
  private EmailHeader_element __EmailHeader;
  public void setOwnerChangeOptions(OwnerChangeOption[] options) {
    __OwnerChangeOptions = new OwnerChangeOptions_element();
    __OwnerChangeOptions.setOptions(options);
  }
  
  public void clearOwnerChangeOptions() {
    __OwnerChangeOptions = null;
  }
  
  public OwnerChangeOptions_element getOwnerChangeOptions() {
    return __OwnerChangeOptions;
  }
  
  public void __setOwnerChangeOptions(OwnerChangeOptions_element __header) {
    __OwnerChangeOptions = __header;
  }
  

  public void setDuplicateRuleHeader(boolean allowSave, boolean includeRecordDetails, boolean runAsCurrentUser)
  {
    __DuplicateRuleHeader = new DuplicateRuleHeader_element();
    __DuplicateRuleHeader.setAllowSave(allowSave);
    __DuplicateRuleHeader.setIncludeRecordDetails(includeRecordDetails);
    __DuplicateRuleHeader.setRunAsCurrentUser(runAsCurrentUser);
  }
  
  public void clearDuplicateRuleHeader() {
    __DuplicateRuleHeader = null;
  }
  
  public DuplicateRuleHeader_element getDuplicateRuleHeader() {
    return __DuplicateRuleHeader;
  }
  
  public void __setDuplicateRuleHeader(DuplicateRuleHeader_element __header) {
    __DuplicateRuleHeader = __header;
  }
  

  public void setStreamingEnabledHeader(boolean streamingEnabled)
  {
    __StreamingEnabledHeader = new StreamingEnabledHeader_element();
    __StreamingEnabledHeader.setStreamingEnabled(streamingEnabled);
  }
  
  public void clearStreamingEnabledHeader() {
    __StreamingEnabledHeader = null;
  }
  
  public StreamingEnabledHeader_element getStreamingEnabledHeader() {
    return __StreamingEnabledHeader;
  }
  
  public void __setStreamingEnabledHeader(StreamingEnabledHeader_element __header) {
    __StreamingEnabledHeader = __header;
  }
  

  public void setAllowFieldTruncationHeader(boolean allowFieldTruncation)
  {
    __AllowFieldTruncationHeader = new AllowFieldTruncationHeader_element();
    __AllowFieldTruncationHeader.setAllowFieldTruncation(allowFieldTruncation);
  }
  
  public void clearAllowFieldTruncationHeader() {
    __AllowFieldTruncationHeader = null;
  }
  
  public AllowFieldTruncationHeader_element getAllowFieldTruncationHeader() {
    return __AllowFieldTruncationHeader;
  }
  
  public void __setAllowFieldTruncationHeader(AllowFieldTruncationHeader_element __header) {
    __AllowFieldTruncationHeader = __header;
  }
  

  public void setLimitInfoHeader(LimitInfo[] limitInfo)
  {
    __LimitInfoHeader = new LimitInfoHeader_element();
    __LimitInfoHeader.setLimitInfo(limitInfo);
  }
  
  public void clearLimitInfoHeader() {
    __LimitInfoHeader = null;
  }
  
  public LimitInfoHeader_element getLimitInfoHeader() {
    return __LimitInfoHeader;
  }
  
  public void __setLimitInfoHeader(LimitInfoHeader_element __header) {
    __LimitInfoHeader = __header;
  }
  

  public void setDebuggingInfo(String debugLog)
  {
    __DebuggingInfo = new DebuggingInfo_element();
    __DebuggingInfo.setDebugLog(debugLog);
  }
  
  public void clearDebuggingInfo() {
    __DebuggingInfo = null;
  }
  
  public DebuggingInfo_element getDebuggingInfo() {
    return __DebuggingInfo;
  }
  
  public void __setDebuggingInfo(DebuggingInfo_element __header) {
    __DebuggingInfo = __header;
  }
  

  public void setAssignmentRuleHeader(String assignmentRuleId, Boolean useDefaultRule)
  {
    __AssignmentRuleHeader = new AssignmentRuleHeader_element();
    __AssignmentRuleHeader.setAssignmentRuleId(assignmentRuleId);
    __AssignmentRuleHeader.setUseDefaultRule(useDefaultRule);
  }
  
  public void clearAssignmentRuleHeader() {
    __AssignmentRuleHeader = null;
  }
  
  public AssignmentRuleHeader_element getAssignmentRuleHeader() {
    return __AssignmentRuleHeader;
  }
  
  public void __setAssignmentRuleHeader(AssignmentRuleHeader_element __header) {
    __AssignmentRuleHeader = __header;
  }
  

  public void setDisableFeedTrackingHeader(boolean disableFeedTracking)
  {
    __DisableFeedTrackingHeader = new DisableFeedTrackingHeader_element();
    __DisableFeedTrackingHeader.setDisableFeedTracking(disableFeedTracking);
  }
  
  public void clearDisableFeedTrackingHeader() {
    __DisableFeedTrackingHeader = null;
  }
  
  public DisableFeedTrackingHeader_element getDisableFeedTrackingHeader() {
    return __DisableFeedTrackingHeader;
  }
  
  public void __setDisableFeedTrackingHeader(DisableFeedTrackingHeader_element __header) {
    __DisableFeedTrackingHeader = __header;
  }
  

  public void setLocaleOptions(String language, boolean localizeErrors)
  {
    __LocaleOptions = new LocaleOptions_element();
    __LocaleOptions.setLanguage(language);
    __LocaleOptions.setLocalizeErrors(localizeErrors);
  }
  
  public void clearLocaleOptions() {
    __LocaleOptions = null;
  }
  
  public LocaleOptions_element getLocaleOptions() {
    return __LocaleOptions;
  }
  
  public void __setLocaleOptions(LocaleOptions_element __header) {
    __LocaleOptions = __header;
  }
  

  public void setDebuggingHeader(LogInfo[] categories, DebugLevel debugLevel)
  {
    __DebuggingHeader = new DebuggingHeader_element();
    __DebuggingHeader.setCategories(categories);
    __DebuggingHeader.setDebugLevel(debugLevel);
  }
  
  public void clearDebuggingHeader() {
    __DebuggingHeader = null;
  }
  
  public DebuggingHeader_element getDebuggingHeader() {
    return __DebuggingHeader;
  }
  
  public void __setDebuggingHeader(DebuggingHeader_element __header) {
    __DebuggingHeader = __header;
  }
  

  public void setPackageVersionHeader(PackageVersion[] packageVersions)
  {
    __PackageVersionHeader = new PackageVersionHeader_element();
    __PackageVersionHeader.setPackageVersions(packageVersions);
  }
  
  public void clearPackageVersionHeader() {
    __PackageVersionHeader = null;
  }
  
  public PackageVersionHeader_element getPackageVersionHeader() {
    return __PackageVersionHeader;
  }
  
  public void __setPackageVersionHeader(PackageVersionHeader_element __header) {
    __PackageVersionHeader = __header;
  }
  

  public void setSessionHeader(String sessionId)
  {
    __SessionHeader = new SessionHeader_element();
    __SessionHeader.setSessionId(sessionId);
  }
  
  public void clearSessionHeader() {
    __SessionHeader = null;
  }
  
  public SessionHeader_element getSessionHeader() {
    return __SessionHeader;
  }
  
  public void __setSessionHeader(SessionHeader_element __header) {
    __SessionHeader = __header;
  }
  

  public void setQueryOptions(int batchSize)
  {
    __QueryOptions = new QueryOptions_element();
    __QueryOptions.setBatchSize(batchSize);
  }
  
  public void clearQueryOptions() {
    __QueryOptions = null;
  }
  
  public QueryOptions_element getQueryOptions() {
    return __QueryOptions;
  }
  
  public void __setQueryOptions(QueryOptions_element __header) {
    __QueryOptions = __header;
  }
  

  public void setEmailHeader(boolean triggerAutoResponseEmail, boolean triggerOtherEmail, boolean triggerUserEmail)
  {
    __EmailHeader = new EmailHeader_element();
    __EmailHeader.setTriggerAutoResponseEmail(triggerAutoResponseEmail);
    __EmailHeader.setTriggerOtherEmail(triggerOtherEmail);
    __EmailHeader.setTriggerUserEmail(triggerUserEmail);
  }
  
  public void clearEmailHeader() {
    __EmailHeader = null;
  }
  
  public EmailHeader_element getEmailHeader() {
    return __EmailHeader;
  }
  
  public void __setEmailHeader(EmailHeader_element __header) {
    __EmailHeader = __header;
  }
  
  public EnterpriseConnection(ConnectorConfig config)
    throws ConnectionException
  {
    __config = config;
    __typeMapper.setPackagePrefix(null);
    __typeMapper.setConfig(config);
    
    config.verifyEnterpriseEndpoint();
    if (!config.isManualLogin()) {
      if (config.getSessionId() == null) {
        config.setServiceEndpoint(config.getAuthEndpoint());
        LoginResult result = login(config.getUsername(), config.getPassword());
        config.setSessionId(result.getSessionId());
        config.setServiceEndpoint(result.getServerUrl());
      }
      else if (config.getServiceEndpoint() == null) {
        throw new ConnectionException("Please set ServiceEndpoint");
      }
    }
    

    __SessionHeader = new SessionHeader_element();
    __SessionHeader.setSessionId(config.getSessionId());
  }
  
  private SoapConnection newConnection()
  {
    SoapConnection __c = new SoapConnection(__config.getServiceEndpoint(), "urn:sobject.enterprise.soap.sforce.com", __typeMapper, __config);
    
    __c.setConnection(this);
    __c.setKnownHeaders(knownHeaders);
    return __c;
  }
  
  public SaveResult[] create(SObject[] sObjects) throws ConnectionException
  {
    SoapConnection __connection = newConnection();
    Create_element __request = new Create_element();
    
    __request.setSObjects(sObjects);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__AssignmentRuleHeader != null) __connection.addHeader(AssignmentRuleHeader_qname, __AssignmentRuleHeader);
    if (__MruHeader != null) __connection.addHeader(MruHeader_qname, __MruHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__AllOrNoneHeader != null) __connection.addHeader(AllOrNoneHeader_qname, __AllOrNoneHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__EmailHeader != null) { __connection.addHeader(EmailHeader_qname, __EmailHeader);
    }
    addHeaders(__connection);
    
    CreateResponse_element __response = (CreateResponse_element)__connection.send("", create_qname, __request, createResponse_qname, CreateResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeSoftphoneLayoutResult describeSoftphoneLayout() throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeSoftphoneLayout_element __request = new DescribeSoftphoneLayout_element();
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeSoftphoneLayoutResponse_element __response = (DescribeSoftphoneLayoutResponse_element)__connection.send("", describeSoftphoneLayout_qname, __request, describeSoftphoneLayoutResponse_qname, DescribeSoftphoneLayoutResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeSearchScopeOrderResult[] describeSearchScopeOrder() throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeSearchScopeOrder_element __request = new DescribeSearchScopeOrder_element();
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeSearchScopeOrderResponse_element __response = (DescribeSearchScopeOrderResponse_element)__connection.send("", describeSearchScopeOrder_qname, __request, describeSearchScopeOrderResponse_qname, DescribeSearchScopeOrderResponse_element.class);
    


    return __response.getResult();
  }
  
  public void logout() throws ConnectionException { SoapConnection __connection = newConnection();
    Logout_element __request = new Logout_element();
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    __connection.send("", logout_qname, __request, logoutResponse_qname, LogoutResponse_element.class);
  }
  
  public InvalidateSessionsResult[] invalidateSessions(String[] sessionIds)
    throws ConnectionException
  {
    SoapConnection __connection = newConnection();
    InvalidateSessions_element __request = new InvalidateSessions_element();
    
    __request.setSessionIds(sessionIds);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    InvalidateSessionsResponse_element __response = (InvalidateSessionsResponse_element)__connection.send("", invalidateSessions_qname, __request, invalidateSessionsResponse_qname, InvalidateSessionsResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeSearchLayoutResult[] describeSearchLayouts(String[] sObjectType) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeSearchLayouts_element __request = new DescribeSearchLayouts_element();
    
    __request.setSObjectType(sObjectType);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeSearchLayoutsResponse_element __response = (DescribeSearchLayoutsResponse_element)__connection.send("", describeSearchLayouts_qname, __request, describeSearchLayoutsResponse_qname, DescribeSearchLayoutsResponse_element.class);
    


    return __response.getResult();
  }
  
  public MergeResult[] merge(MergeRequest[] request) throws ConnectionException { SoapConnection __connection = newConnection();
    Merge_element __request = new Merge_element();
    
    __request.setRequest(request);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__AssignmentRuleHeader != null) __connection.addHeader(AssignmentRuleHeader_qname, __AssignmentRuleHeader);
    if (__MruHeader != null) __connection.addHeader(MruHeader_qname, __MruHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__EmailHeader != null) { __connection.addHeader(EmailHeader_qname, __EmailHeader);
    }
    addHeaders(__connection);
    
    MergeResponse_element __response = (MergeResponse_element)__connection.send("", merge_qname, __request, mergeResponse_qname, MergeResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeSObjectResult describeSObject(String sObjectType) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeSObject_element __request = new DescribeSObject_element();
    
    __request.setSObjectType(sObjectType);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    DescribeSObjectResponse_element __response = (DescribeSObjectResponse_element)__connection.send("", describeSObject_qname, __request, describeSObjectResponse_qname, DescribeSObjectResponse_element.class);
    


    return __response.getResult();
  }
  
  public SetPasswordResult setPassword(String userId, String password) throws ConnectionException { SoapConnection __connection = newConnection();
    SetPassword_element __request = new SetPassword_element();
    
    __request.setUserId(userId);
    __request.setPassword(password);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    SetPasswordResponse_element __response = (SetPasswordResponse_element)__connection.send("", setPassword_qname, __request, setPasswordResponse_qname, SetPasswordResponse_element.class);
    


    return __response.getResult();
  }
  
  public ResetPasswordResult resetPassword(String userId) throws ConnectionException { SoapConnection __connection = newConnection();
    ResetPassword_element __request = new ResetPassword_element();
    
    __request.setUserId(userId);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__EmailHeader != null) { __connection.addHeader(EmailHeader_qname, __EmailHeader);
    }
    addHeaders(__connection);
    
    ResetPasswordResponse_element __response = (ResetPasswordResponse_element)__connection.send("", resetPassword_qname, __request, resetPasswordResponse_qname, ResetPasswordResponse_element.class);
    


    return __response.getResult();
  }
  
  public QuickActionTemplateResult[] retrieveQuickActionTemplates(String[] quickActionNames, String contextId) throws ConnectionException { SoapConnection __connection = newConnection();
    RetrieveQuickActionTemplates_element __request = new RetrieveQuickActionTemplates_element();
    
    __request.setQuickActionNames(quickActionNames);
    __request.setContextId(contextId);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    RetrieveQuickActionTemplatesResponse_element __response = (RetrieveQuickActionTemplatesResponse_element)__connection.send("", retrieveQuickActionTemplates_qname, __request, retrieveQuickActionTemplatesResponse_qname, RetrieveQuickActionTemplatesResponse_element.class);
    


    return __response.getResult();
  }
  
  public GetServerTimestampResult getServerTimestamp() throws ConnectionException { SoapConnection __connection = newConnection();
    GetServerTimestamp_element __request = new GetServerTimestamp_element();
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    GetServerTimestampResponse_element __response = (GetServerTimestampResponse_element)__connection.send("", getServerTimestamp_qname, __request, getServerTimestampResponse_qname, GetServerTimestampResponse_element.class);
    


    return __response.getResult();
  }
  
  public UndeleteResult[] undelete(String[] ids) throws ConnectionException { SoapConnection __connection = newConnection();
    Undelete_element __request = new Undelete_element();
    
    __request.setIds(ids);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__AllOrNoneHeader != null) __connection.addHeader(AllOrNoneHeader_qname, __AllOrNoneHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    UndeleteResponse_element __response = (UndeleteResponse_element)__connection.send("", undelete_qname, __request, undeleteResponse_qname, UndeleteResponse_element.class);
    


    return __response.getResult();
  }
  
  public SObject[] retrieve(String fieldList, String sObjectType, String[] ids) throws ConnectionException { SoapConnection __connection = newConnection();
    Retrieve_element __request = new Retrieve_element();
    
    __request.setFieldList(fieldList);
    __request.setSObjectType(sObjectType);
    __request.setIds(ids);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__QueryOptions != null) __connection.addHeader(QueryOptions_qname, __QueryOptions);
    if (__MruHeader != null) __connection.addHeader(MruHeader_qname, __MruHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    RetrieveResponse_element __response = (RetrieveResponse_element)__connection.send("", retrieve_qname, __request, retrieveResponse_qname, RetrieveResponse_element.class);
    


    return __response.getResult();
  }
  
  public KnowledgeSettings describeKnowledgeSettings() throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeKnowledgeSettings_element __request = new DescribeKnowledgeSettings_element();
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    DescribeKnowledgeSettingsResponse_element __response = (DescribeKnowledgeSettingsResponse_element)__connection.send("", describeKnowledgeSettings_qname, __request, describeKnowledgeSettingsResponse_qname, DescribeKnowledgeSettingsResponse_element.class);
    


    return __response.getResult();
  }
  
  public ExecuteListViewResult executeListView(ExecuteListViewRequest request) throws ConnectionException { SoapConnection __connection = newConnection();
    ExecuteListView_element __request = new ExecuteListView_element();
    
    __request.setRequest(request);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__MruHeader != null) { __connection.addHeader(MruHeader_qname, __MruHeader);
    }
    addHeaders(__connection);
    
    ExecuteListViewResponse_element __response = (ExecuteListViewResponse_element)__connection.send("", executeListView_qname, __request, executeListViewResponse_qname, ExecuteListViewResponse_element.class);
    


    return __response.getResult();
  }
  
  public RenderStoredEmailTemplateResult renderStoredEmailTemplate(RenderStoredEmailTemplateRequest request) throws ConnectionException { SoapConnection __connection = newConnection();
    RenderStoredEmailTemplate_element __request = new RenderStoredEmailTemplate_element();
    
    __request.setRequest(request);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    RenderStoredEmailTemplateResponse_element __response = (RenderStoredEmailTemplateResponse_element)__connection.send("", renderStoredEmailTemplate_qname, __request, renderStoredEmailTemplateResponse_qname, RenderStoredEmailTemplateResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeVisualForceResult describeVisualForce(boolean includeAllDetails, String namespacePrefix) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeVisualForce_element __request = new DescribeVisualForce_element();
    
    __request.setIncludeAllDetails(includeAllDetails);
    __request.setNamespacePrefix(namespacePrefix);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeVisualForceResponse_element __response = (DescribeVisualForceResponse_element)__connection.send("", describeVisualForce_qname, __request, describeVisualForceResponse_qname, DescribeVisualForceResponse_element.class);
    


    return __response.getResult();
  }
  
  public FindDuplicatesResult[] findDuplicatesByIds(String[] ids) throws ConnectionException { SoapConnection __connection = newConnection();
    FindDuplicatesByIds_element __request = new FindDuplicatesByIds_element();
    
    __request.setIds(ids);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__DuplicateRuleHeader != null) { __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    }
    addHeaders(__connection);
    
    FindDuplicatesByIdsResponse_element __response = (FindDuplicatesByIdsResponse_element)__connection.send("", findDuplicatesByIds_qname, __request, findDuplicatesByIdsResponse_qname, FindDuplicatesByIdsResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeNounResult[] describeNouns(String[] nouns, boolean onlyRenamed, boolean includeFields) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeNouns_element __request = new DescribeNouns_element();
    
    __request.setNouns(nouns);
    __request.setOnlyRenamed(onlyRenamed);
    __request.setIncludeFields(includeFields);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    DescribeNounsResponse_element __response = (DescribeNounsResponse_element)__connection.send("", describeNouns_qname, __request, describeNounsResponse_qname, DescribeNounsResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeThemeResult describeTheme(String[] sobjectType) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeTheme_element __request = new DescribeTheme_element();
    
    __request.setSobjectType(sobjectType);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeThemeResponse_element __response = (DescribeThemeResponse_element)__connection.send("", describeTheme_qname, __request, describeThemeResponse_qname, DescribeThemeResponse_element.class);
    


    return __response.getResult();
  }
  
  public UpsertResult[] upsert(String externalIDFieldName, SObject[] sObjects) throws ConnectionException { SoapConnection __connection = newConnection();
    Upsert_element __request = new Upsert_element();
    
    __request.setExternalIDFieldName(externalIDFieldName);
    __request.setSObjects(sObjects);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__AssignmentRuleHeader != null) __connection.addHeader(AssignmentRuleHeader_qname, __AssignmentRuleHeader);
    if (__MruHeader != null) __connection.addHeader(MruHeader_qname, __MruHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__AllOrNoneHeader != null) __connection.addHeader(AllOrNoneHeader_qname, __AllOrNoneHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__EmailHeader != null) __connection.addHeader(EmailHeader_qname, __EmailHeader);
    if (__OwnerChangeOptions != null) { __connection.addHeader(OwnerChangeOptions_qname, __OwnerChangeOptions);
    }
    addHeaders(__connection);
    
    UpsertResponse_element __response = (UpsertResponse_element)__connection.send("", upsert_qname, __request, upsertResponse_qname, UpsertResponse_element.class);
    


    return __response.getResult();
  }
  
  public RenderEmailTemplateResult[] renderEmailTemplate(RenderEmailTemplateRequest[] renderRequests) throws ConnectionException { SoapConnection __connection = newConnection();
    RenderEmailTemplate_element __request = new RenderEmailTemplate_element();
    
    __request.setRenderRequests(renderRequests);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    RenderEmailTemplateResponse_element __response = (RenderEmailTemplateResponse_element)__connection.send("", renderEmailTemplate_qname, __request, renderEmailTemplateResponse_qname, RenderEmailTemplateResponse_element.class);
    


    return __response.getResult();
  }
  
  public SendEmailResult[] sendEmailMessage(String[] ids) throws ConnectionException { SoapConnection __connection = newConnection();
    SendEmailMessage_element __request = new SendEmailMessage_element();
    
    __request.setIds(ids);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    SendEmailMessageResponse_element __response = (SendEmailMessageResponse_element)__connection.send("", sendEmailMessage_qname, __request, sendEmailMessageResponse_qname, SendEmailMessageResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeSObjectResult[] describeSObjects(String[] sObjectType) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeSObjects_element __request = new DescribeSObjects_element();
    
    __request.setSObjectType(sObjectType);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    DescribeSObjectsResponse_element __response = (DescribeSObjectsResponse_element)__connection.send("", describeSObjects_qname, __request, describeSObjectsResponse_qname, DescribeSObjectsResponse_element.class);
    


    return __response.getResult();
  }
  
  public PerformQuickActionResult[] performQuickActions(PerformQuickActionRequest[] quickActions) throws ConnectionException { SoapConnection __connection = newConnection();
    PerformQuickActions_element __request = new PerformQuickActions_element();
    
    __request.setQuickActions(quickActions);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__AssignmentRuleHeader != null) __connection.addHeader(AssignmentRuleHeader_qname, __AssignmentRuleHeader);
    if (__MruHeader != null) __connection.addHeader(MruHeader_qname, __MruHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__AllOrNoneHeader != null) __connection.addHeader(AllOrNoneHeader_qname, __AllOrNoneHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__EmailHeader != null) __connection.addHeader(EmailHeader_qname, __EmailHeader);
    if (__OwnerChangeOptions != null) { __connection.addHeader(OwnerChangeOptions_qname, __OwnerChangeOptions);
    }
    addHeaders(__connection);
    
    PerformQuickActionsResponse_element __response = (PerformQuickActionsResponse_element)__connection.send("", performQuickActions_qname, __request, performQuickActionsResponse_qname, PerformQuickActionsResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeQuickActionResult[] describeQuickActions(String[] quickActions) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeQuickActions_element __request = new DescribeQuickActions_element();
    
    __request.setQuickActions(quickActions);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    DescribeQuickActionsResponse_element __response = (DescribeQuickActionsResponse_element)__connection.send("", describeQuickActions_qname, __request, describeQuickActionsResponse_qname, DescribeQuickActionsResponse_element.class);
    


    return __response.getResult();
  }
  
  public QueryResult query(String queryString) throws ConnectionException { SoapConnection __connection = newConnection();
    Query_element __request = new Query_element();
    
    __request.setQueryString(queryString);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__QueryOptions != null) __connection.addHeader(QueryOptions_qname, __QueryOptions);
    if (__MruHeader != null) __connection.addHeader(MruHeader_qname, __MruHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    QueryResponse_element __response = (QueryResponse_element)__connection.send("", query_qname, __request, queryResponse_qname, QueryResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeAvailableQuickActionResult[] describeAvailableQuickActions(String contextType) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeAvailableQuickActions_element __request = new DescribeAvailableQuickActions_element();
    
    __request.setContextType(contextType);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    DescribeAvailableQuickActionsResponse_element __response = (DescribeAvailableQuickActionsResponse_element)__connection.send("", describeAvailableQuickActions_qname, __request, describeAvailableQuickActionsResponse_qname, DescribeAvailableQuickActionsResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribePathAssistantsResult describePathAssistants(String sObjectType, String picklistValue, String[] recordTypeIds) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribePathAssistants_element __request = new DescribePathAssistants_element();
    
    __request.setSObjectType(sObjectType);
    __request.setPicklistValue(picklistValue);
    __request.setRecordTypeIds(recordTypeIds);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribePathAssistantsResponse_element __response = (DescribePathAssistantsResponse_element)__connection.send("", describePathAssistants_qname, __request, describePathAssistantsResponse_qname, DescribePathAssistantsResponse_element.class);
    


    return __response.getResult();
  }
  
  public GetUpdatedResult getUpdated(String sObjectType, Calendar startDate, Calendar endDate) throws ConnectionException { SoapConnection __connection = newConnection();
    GetUpdated_element __request = new GetUpdated_element();
    
    __request.setSObjectType(sObjectType);
    __request.setStartDate(startDate);
    __request.setEndDate(endDate);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    GetUpdatedResponse_element __response = (GetUpdatedResponse_element)__connection.send("", getUpdated_qname, __request, getUpdatedResponse_qname, GetUpdatedResponse_element.class);
    


    return __response.getResult();
  }
  
  public SearchResult search(String searchString) throws ConnectionException { SoapConnection __connection = newConnection();
    Search_element __request = new Search_element();
    
    __request.setSearchString(searchString);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    SearchResponse_element __response = (SearchResponse_element)__connection.send("", search_qname, __request, searchResponse_qname, SearchResponse_element.class);
    


    return __response.getResult();
  }
  
  public SendEmailResult[] sendEmail(Email[] messages) throws ConnectionException { SoapConnection __connection = newConnection();
    SendEmail_element __request = new SendEmail_element();
    
    __request.setMessages(messages);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    SendEmailResponse_element __response = (SendEmailResponse_element)__connection.send("", sendEmail_qname, __request, sendEmailResponse_qname, SendEmailResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeTabSetResult[] describeTabs() throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeTabs_element __request = new DescribeTabs_element();
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeTabsResponse_element __response = (DescribeTabsResponse_element)__connection.send("", describeTabs_qname, __request, describeTabsResponse_qname, DescribeTabsResponse_element.class);
    


    return __response.getResult();
  }
  
  public GetDeletedResult getDeleted(String sObjectType, Calendar startDate, Calendar endDate) throws ConnectionException { SoapConnection __connection = newConnection();
    GetDeleted_element __request = new GetDeleted_element();
    
    __request.setSObjectType(sObjectType);
    __request.setStartDate(startDate);
    __request.setEndDate(endDate);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    GetDeletedResponse_element __response = (GetDeletedResponse_element)__connection.send("", getDeleted_qname, __request, getDeletedResponse_qname, GetDeletedResponse_element.class);
    


    return __response.getResult();
  }
  
  public SaveResult[] update(SObject[] sObjects) throws ConnectionException { SoapConnection __connection = newConnection();
    Update_element __request = new Update_element();
    
    __request.setSObjects(sObjects);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__AssignmentRuleHeader != null) __connection.addHeader(AssignmentRuleHeader_qname, __AssignmentRuleHeader);
    if (__MruHeader != null) __connection.addHeader(MruHeader_qname, __MruHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__AllOrNoneHeader != null) __connection.addHeader(AllOrNoneHeader_qname, __AllOrNoneHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__EmailHeader != null) __connection.addHeader(EmailHeader_qname, __EmailHeader);
    if (__OwnerChangeOptions != null) { __connection.addHeader(OwnerChangeOptions_qname, __OwnerChangeOptions);
    }
    addHeaders(__connection);
    
    UpdateResponse_element __response = (UpdateResponse_element)__connection.send("", update_qname, __request, updateResponse_qname, UpdateResponse_element.class);
    


    return __response.getResult();
  }
  
  public LoginResult login(String username, String password) throws ConnectionException { SoapConnection __connection = newConnection();
    Login_element __request = new Login_element();
    
    __request.setUsername(username);
    __request.setPassword(password);
    
    if (__LoginScopeHeader != null) { __connection.addHeader(LoginScopeHeader_qname, __LoginScopeHeader);
    }
    addHeaders(__connection);
    
    LoginResponse_element __response = (LoginResponse_element)__connection.send("", login_qname, __request, loginResponse_qname, LoginResponse_element.class);
    


    return __response.getResult();
  }
  
  public QueryResult queryAll(String queryString) throws ConnectionException { SoapConnection __connection = newConnection();
    QueryAll_element __request = new QueryAll_element();
    
    __request.setQueryString(queryString);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__QueryOptions != null) { __connection.addHeader(QueryOptions_qname, __QueryOptions);
    }
    addHeaders(__connection);
    
    QueryAllResponse_element __response = (QueryAllResponse_element)__connection.send("", queryAll_qname, __request, queryAllResponse_qname, QueryAllResponse_element.class);
    


    return __response.getResult();
  }
  
  public DeleteResult[] delete(String[] ids) throws ConnectionException { SoapConnection __connection = newConnection();
    Delete_element __request = new Delete_element();
    
    __request.setIds(ids);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__UserTerritoryDeleteHeader != null) __connection.addHeader(UserTerritoryDeleteHeader_qname, __UserTerritoryDeleteHeader);
    if (__EmailHeader != null) __connection.addHeader(EmailHeader_qname, __EmailHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__AllOrNoneHeader != null) __connection.addHeader(AllOrNoneHeader_qname, __AllOrNoneHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) { __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    }
    addHeaders(__connection);
    
    DeleteResponse_element __response = (DeleteResponse_element)__connection.send("", delete_qname, __request, deleteResponse_qname, DeleteResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeSoqlListViewResult describeSObjectListViews(String sObjectType, boolean recentsOnly, ListViewIsSoqlCompatible isSoqlCompatible, int limit, int offset) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeSObjectListViews_element __request = new DescribeSObjectListViews_element();
    
    __request.setSObjectType(sObjectType);
    __request.setRecentsOnly(recentsOnly);
    __request.setIsSoqlCompatible(isSoqlCompatible);
    __request.setLimit(limit);
    __request.setOffset(offset);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeSObjectListViewsResponse_element __response = (DescribeSObjectListViewsResponse_element)__connection.send("", describeSObjectListViews_qname, __request, describeSObjectListViewsResponse_qname, DescribeSObjectListViewsResponse_element.class);
    


    return __response.getResult();
  }
  
  public LeadConvertResult[] convertLead(LeadConvert[] leadConverts) throws ConnectionException { SoapConnection __connection = newConnection();
    ConvertLead_element __request = new ConvertLead_element();
    
    __request.setLeadConverts(leadConverts);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    ConvertLeadResponse_element __response = (ConvertLeadResponse_element)__connection.send("", convertLead_qname, __request, convertLeadResponse_qname, ConvertLeadResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeSoqlListViewResult describeSoqlListViews(DescribeSoqlListViewsRequest request) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeSoqlListViews_element __request = new DescribeSoqlListViews_element();
    
    __request.setRequest(request);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeSoqlListViewsResponse_element __response = (DescribeSoqlListViewsResponse_element)__connection.send("", describeSoqlListViews_qname, __request, describeSoqlListViewsResponse_qname, DescribeSoqlListViewsResponse_element.class);
    


    return __response.getResult();
  }
  
  public ChangeOwnPasswordResult changeOwnPassword(String oldPassword, String newPassword) throws ConnectionException { SoapConnection __connection = newConnection();
    ChangeOwnPassword_element __request = new ChangeOwnPassword_element();
    
    __request.setOldPassword(oldPassword);
    __request.setNewPassword(newPassword);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    ChangeOwnPasswordResponse_element __response = (ChangeOwnPasswordResponse_element)__connection.send("", changeOwnPassword_qname, __request, changeOwnPasswordResponse_qname, ChangeOwnPasswordResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeCompactLayoutsResult describeCompactLayouts(String sObjectType, String[] recordTypeIds) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeCompactLayouts_element __request = new DescribeCompactLayouts_element();
    
    __request.setSObjectType(sObjectType);
    __request.setRecordTypeIds(recordTypeIds);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeCompactLayoutsResponse_element __response = (DescribeCompactLayoutsResponse_element)__connection.send("", describeCompactLayouts_qname, __request, describeCompactLayoutsResponse_qname, DescribeCompactLayoutsResponse_element.class);
    


    return __response.getResult();
  }
  
  public EmptyRecycleBinResult[] emptyRecycleBin(String[] ids) throws ConnectionException { SoapConnection __connection = newConnection();
    EmptyRecycleBin_element __request = new EmptyRecycleBin_element();
    
    __request.setIds(ids);
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    EmptyRecycleBinResponse_element __response = (EmptyRecycleBinResponse_element)__connection.send("", emptyRecycleBin_qname, __request, emptyRecycleBinResponse_qname, EmptyRecycleBinResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeApprovalLayoutResult describeApprovalLayout(String sObjectType, String[] approvalProcessNames) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeApprovalLayout_element __request = new DescribeApprovalLayout_element();
    
    __request.setSObjectType(sObjectType);
    __request.setApprovalProcessNames(approvalProcessNames);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeApprovalLayoutResponse_element __response = (DescribeApprovalLayoutResponse_element)__connection.send("", describeApprovalLayout_qname, __request, describeApprovalLayoutResponse_qname, DescribeApprovalLayoutResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeGlobalTheme describeGlobalTheme() throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeGlobalTheme_element __request = new DescribeGlobalTheme_element();
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeGlobalThemeResponse_element __response = (DescribeGlobalThemeResponse_element)__connection.send("", describeGlobalTheme_qname, __request, describeGlobalThemeResponse_qname, DescribeGlobalThemeResponse_element.class);
    


    return __response.getResult();
  }
  
  public GetUserInfoResult getUserInfo() throws ConnectionException { SoapConnection __connection = newConnection();
    GetUserInfo_element __request = new GetUserInfo_element();
    
    if (__SessionHeader != null) { __connection.addHeader(SessionHeader_qname, __SessionHeader);
    }
    addHeaders(__connection);
    
    GetUserInfoResponse_element __response = (GetUserInfoResponse_element)__connection.send("", getUserInfo_qname, __request, getUserInfoResponse_qname, GetUserInfoResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeAppMenuResult describeAppMenu(AppMenuType appMenuType, String networkId) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeAppMenu_element __request = new DescribeAppMenu_element();
    
    __request.setAppMenuType(appMenuType);
    __request.setNetworkId(networkId);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeAppMenuResponse_element __response = (DescribeAppMenuResponse_element)__connection.send("", describeAppMenu_qname, __request, describeAppMenuResponse_qname, DescribeAppMenuResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeLayoutResult describeLayout(String sObjectType, String layoutName, String[] recordTypeIds) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeLayout_element __request = new DescribeLayout_element();
    
    __request.setSObjectType(sObjectType);
    __request.setLayoutName(layoutName);
    __request.setRecordTypeIds(recordTypeIds);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeLayoutResponse_element __response = (DescribeLayoutResponse_element)__connection.send("", describeLayout_qname, __request, describeLayoutResponse_qname, DescribeLayoutResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeSearchableEntityResult[] describeSearchableEntities(boolean includeOnlyEntitiesWithTabs) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeSearchableEntities_element __request = new DescribeSearchableEntities_element();
    
    __request.setIncludeOnlyEntitiesWithTabs(includeOnlyEntitiesWithTabs);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeSearchableEntitiesResponse_element __response = (DescribeSearchableEntitiesResponse_element)__connection.send("", describeSearchableEntities_qname, __request, describeSearchableEntitiesResponse_qname, DescribeSearchableEntitiesResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeCompactLayout[] describePrimaryCompactLayouts(String[] sObjectTypes) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribePrimaryCompactLayouts_element __request = new DescribePrimaryCompactLayouts_element();
    
    __request.setSObjectTypes(sObjectTypes);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribePrimaryCompactLayoutsResponse_element __response = (DescribePrimaryCompactLayoutsResponse_element)__connection.send("", describePrimaryCompactLayouts_qname, __request, describePrimaryCompactLayoutsResponse_qname, DescribePrimaryCompactLayoutsResponse_element.class);
    


    return __response.getResult();
  }
  
  public QueryResult queryMore(String queryLocator) throws ConnectionException { SoapConnection __connection = newConnection();
    QueryMore_element __request = new QueryMore_element();
    
    __request.setQueryLocator(queryLocator);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__QueryOptions != null) { __connection.addHeader(QueryOptions_qname, __QueryOptions);
    }
    addHeaders(__connection);
    
    QueryMoreResponse_element __response = (QueryMoreResponse_element)__connection.send("", queryMore_qname, __request, queryMoreResponse_qname, QueryMoreResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeDataCategoryGroupStructureResult[] describeDataCategoryGroupStructures(DataCategoryGroupSobjectTypePair[] pairs, boolean topCategoriesOnly) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeDataCategoryGroupStructures_element __request = new DescribeDataCategoryGroupStructures_element();
    
    __request.setPairs(pairs);
    __request.setTopCategoriesOnly(topCategoriesOnly);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    DescribeDataCategoryGroupStructuresResponse_element __response = (DescribeDataCategoryGroupStructuresResponse_element)__connection.send("", describeDataCategoryGroupStructures_qname, __request, describeDataCategoryGroupStructuresResponse_qname, DescribeDataCategoryGroupStructuresResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeTab[] describeAllTabs() throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeAllTabs_element __request = new DescribeAllTabs_element();
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeAllTabsResponse_element __response = (DescribeAllTabsResponse_element)__connection.send("", describeAllTabs_qname, __request, describeAllTabsResponse_qname, DescribeAllTabsResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeGlobalResult describeGlobal() throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeGlobal_element __request = new DescribeGlobal_element();
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    DescribeGlobalResponse_element __response = (DescribeGlobalResponse_element)__connection.send("", describeGlobal_qname, __request, describeGlobalResponse_qname, DescribeGlobalResponse_element.class);
    


    return __response.getResult();
  }
  
  public ProcessResult[] process(ProcessRequest[] actions) throws ConnectionException { SoapConnection __connection = newConnection();
    Process_element __request = new Process_element();
    
    __request.setActions(actions);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__AllowFieldTruncationHeader != null) __connection.addHeader(AllowFieldTruncationHeader_qname, __AllowFieldTruncationHeader);
    if (__DisableFeedTrackingHeader != null) __connection.addHeader(DisableFeedTrackingHeader_qname, __DisableFeedTrackingHeader);
    if (__StreamingEnabledHeader != null) __connection.addHeader(StreamingEnabledHeader_qname, __StreamingEnabledHeader);
    if (__DuplicateRuleHeader != null) __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    if (__LocaleOptions != null) __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);
    if (__PackageVersionHeader != null) { __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    }
    addHeaders(__connection);
    
    ProcessResponse_element __response = (ProcessResponse_element)__connection.send("", process_qname, __request, processResponse_qname, ProcessResponse_element.class);
    


    return __response.getResult();
  }
  
  public FindDuplicatesResult[] findDuplicates(SObject[] sObjects) throws ConnectionException { SoapConnection __connection = newConnection();
    FindDuplicates_element __request = new FindDuplicates_element();
    
    __request.setSObjects(sObjects);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__DuplicateRuleHeader != null) { __connection.addHeader(DuplicateRuleHeader_qname, __DuplicateRuleHeader);
    }
    addHeaders(__connection);
    
    FindDuplicatesResponse_element __response = (FindDuplicatesResponse_element)__connection.send("", findDuplicates_qname, __request, findDuplicatesResponse_qname, FindDuplicatesResponse_element.class);
    


    return __response.getResult();
  }
  
  public DescribeDataCategoryGroupResult[] describeDataCategoryGroups(String[] sObjectType) throws ConnectionException { SoapConnection __connection = newConnection();
    DescribeDataCategoryGroups_element __request = new DescribeDataCategoryGroups_element();
    
    __request.setSObjectType(sObjectType);
    
    if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);
    if (__PackageVersionHeader != null) __connection.addHeader(PackageVersionHeader_qname, __PackageVersionHeader);
    if (__LocaleOptions != null) { __connection.addHeader(LocaleOptions_qname, __LocaleOptions);
    }
    addHeaders(__connection);
    
    DescribeDataCategoryGroupsResponse_element __response = (DescribeDataCategoryGroupsResponse_element)__connection.send("", describeDataCategoryGroups_qname, __request, describeDataCategoryGroupsResponse_qname, DescribeDataCategoryGroupsResponse_element.class);
    


    return __response.getResult();
  }
  
  private void addHeaders(SoapConnection __connection) {
    for (Map.Entry<QName, XMLizable> entry : __extraHeaders.entrySet()) {
      __connection.addHeader((QName)entry.getKey(), entry.getValue());
    }
  }
  
  public void addExtraHeader(QName __headerName, XMLizable __value) {
    __extraHeaders.put(__headerName, __value);
  }
  
  public void removeExtraHeader(QName __headerName) {
    __extraHeaders.remove(__headerName);
  }
  
  public XMLizable getExtraHeader(QName __headerName) {
    return (XMLizable)__extraHeaders.get(__headerName);
  }
  
  public void clearExtraHeaders() {
    __extraHeaders = new HashMap();
  }
  
  private static final QName create_qname = new QName("urn:enterprise.soap.sforce.com", "create");
  private static final QName createResponse_qname = new QName("urn:enterprise.soap.sforce.com", "createResponse");
  private static final QName describeSoftphoneLayout_qname = new QName("urn:enterprise.soap.sforce.com", "describeSoftphoneLayout");
  private static final QName describeSoftphoneLayoutResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeSoftphoneLayoutResponse");
  private static final QName describeSearchScopeOrder_qname = new QName("urn:enterprise.soap.sforce.com", "describeSearchScopeOrder");
  private static final QName describeSearchScopeOrderResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeSearchScopeOrderResponse");
  private static final QName logout_qname = new QName("urn:enterprise.soap.sforce.com", "logout");
  private static final QName logoutResponse_qname = new QName("urn:enterprise.soap.sforce.com", "logoutResponse");
  private static final QName invalidateSessions_qname = new QName("urn:enterprise.soap.sforce.com", "invalidateSessions");
  private static final QName invalidateSessionsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "invalidateSessionsResponse");
  private static final QName describeSearchLayouts_qname = new QName("urn:enterprise.soap.sforce.com", "describeSearchLayouts");
  private static final QName describeSearchLayoutsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeSearchLayoutsResponse");
  private static final QName merge_qname = new QName("urn:enterprise.soap.sforce.com", "merge");
  private static final QName mergeResponse_qname = new QName("urn:enterprise.soap.sforce.com", "mergeResponse");
  private static final QName describeSObject_qname = new QName("urn:enterprise.soap.sforce.com", "describeSObject");
  private static final QName describeSObjectResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeSObjectResponse");
  private static final QName setPassword_qname = new QName("urn:enterprise.soap.sforce.com", "setPassword");
  private static final QName setPasswordResponse_qname = new QName("urn:enterprise.soap.sforce.com", "setPasswordResponse");
  private static final QName resetPassword_qname = new QName("urn:enterprise.soap.sforce.com", "resetPassword");
  private static final QName resetPasswordResponse_qname = new QName("urn:enterprise.soap.sforce.com", "resetPasswordResponse");
  private static final QName retrieveQuickActionTemplates_qname = new QName("urn:enterprise.soap.sforce.com", "retrieveQuickActionTemplates");
  private static final QName retrieveQuickActionTemplatesResponse_qname = new QName("urn:enterprise.soap.sforce.com", "retrieveQuickActionTemplatesResponse");
  private static final QName getServerTimestamp_qname = new QName("urn:enterprise.soap.sforce.com", "getServerTimestamp");
  private static final QName getServerTimestampResponse_qname = new QName("urn:enterprise.soap.sforce.com", "getServerTimestampResponse");
  private static final QName undelete_qname = new QName("urn:enterprise.soap.sforce.com", "undelete");
  private static final QName undeleteResponse_qname = new QName("urn:enterprise.soap.sforce.com", "undeleteResponse");
  private static final QName retrieve_qname = new QName("urn:enterprise.soap.sforce.com", "retrieve");
  private static final QName retrieveResponse_qname = new QName("urn:enterprise.soap.sforce.com", "retrieveResponse");
  private static final QName describeKnowledgeSettings_qname = new QName("urn:enterprise.soap.sforce.com", "describeKnowledgeSettings");
  private static final QName describeKnowledgeSettingsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeKnowledgeSettingsResponse");
  private static final QName executeListView_qname = new QName("urn:enterprise.soap.sforce.com", "executeListView");
  private static final QName executeListViewResponse_qname = new QName("urn:enterprise.soap.sforce.com", "executeListViewResponse");
  private static final QName renderStoredEmailTemplate_qname = new QName("urn:enterprise.soap.sforce.com", "renderStoredEmailTemplate");
  private static final QName renderStoredEmailTemplateResponse_qname = new QName("urn:enterprise.soap.sforce.com", "renderStoredEmailTemplateResponse");
  private static final QName describeVisualForce_qname = new QName("urn:enterprise.soap.sforce.com", "describeVisualForce");
  private static final QName describeVisualForceResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeVisualForceResponse");
  private static final QName findDuplicatesByIds_qname = new QName("urn:enterprise.soap.sforce.com", "findDuplicatesByIds");
  private static final QName findDuplicatesByIdsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "findDuplicatesByIdsResponse");
  private static final QName describeNouns_qname = new QName("urn:enterprise.soap.sforce.com", "describeNouns");
  private static final QName describeNounsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeNounsResponse");
  private static final QName describeTheme_qname = new QName("urn:enterprise.soap.sforce.com", "describeTheme");
  private static final QName describeThemeResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeThemeResponse");
  private static final QName upsert_qname = new QName("urn:enterprise.soap.sforce.com", "upsert");
  private static final QName upsertResponse_qname = new QName("urn:enterprise.soap.sforce.com", "upsertResponse");
  private static final QName renderEmailTemplate_qname = new QName("urn:enterprise.soap.sforce.com", "renderEmailTemplate");
  private static final QName renderEmailTemplateResponse_qname = new QName("urn:enterprise.soap.sforce.com", "renderEmailTemplateResponse");
  private static final QName sendEmailMessage_qname = new QName("urn:enterprise.soap.sforce.com", "sendEmailMessage");
  private static final QName sendEmailMessageResponse_qname = new QName("urn:enterprise.soap.sforce.com", "sendEmailMessageResponse");
  private static final QName describeSObjects_qname = new QName("urn:enterprise.soap.sforce.com", "describeSObjects");
  private static final QName describeSObjectsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeSObjectsResponse");
  private static final QName performQuickActions_qname = new QName("urn:enterprise.soap.sforce.com", "performQuickActions");
  private static final QName performQuickActionsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "performQuickActionsResponse");
  private static final QName describeQuickActions_qname = new QName("urn:enterprise.soap.sforce.com", "describeQuickActions");
  private static final QName describeQuickActionsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeQuickActionsResponse");
  private static final QName query_qname = new QName("urn:enterprise.soap.sforce.com", "query");
  private static final QName queryResponse_qname = new QName("urn:enterprise.soap.sforce.com", "queryResponse");
  private static final QName describeAvailableQuickActions_qname = new QName("urn:enterprise.soap.sforce.com", "describeAvailableQuickActions");
  private static final QName describeAvailableQuickActionsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeAvailableQuickActionsResponse");
  private static final QName describePathAssistants_qname = new QName("urn:enterprise.soap.sforce.com", "describePathAssistants");
  private static final QName describePathAssistantsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describePathAssistantsResponse");
  private static final QName getUpdated_qname = new QName("urn:enterprise.soap.sforce.com", "getUpdated");
  private static final QName getUpdatedResponse_qname = new QName("urn:enterprise.soap.sforce.com", "getUpdatedResponse");
  private static final QName search_qname = new QName("urn:enterprise.soap.sforce.com", "search");
  private static final QName searchResponse_qname = new QName("urn:enterprise.soap.sforce.com", "searchResponse");
  private static final QName sendEmail_qname = new QName("urn:enterprise.soap.sforce.com", "sendEmail");
  private static final QName sendEmailResponse_qname = new QName("urn:enterprise.soap.sforce.com", "sendEmailResponse");
  private static final QName describeTabs_qname = new QName("urn:enterprise.soap.sforce.com", "describeTabs");
  private static final QName describeTabsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeTabsResponse");
  private static final QName getDeleted_qname = new QName("urn:enterprise.soap.sforce.com", "getDeleted");
  private static final QName getDeletedResponse_qname = new QName("urn:enterprise.soap.sforce.com", "getDeletedResponse");
  private static final QName update_qname = new QName("urn:enterprise.soap.sforce.com", "update");
  private static final QName updateResponse_qname = new QName("urn:enterprise.soap.sforce.com", "updateResponse");
  private static final QName login_qname = new QName("urn:enterprise.soap.sforce.com", "login");
  private static final QName loginResponse_qname = new QName("urn:enterprise.soap.sforce.com", "loginResponse");
  private static final QName queryAll_qname = new QName("urn:enterprise.soap.sforce.com", "queryAll");
  private static final QName queryAllResponse_qname = new QName("urn:enterprise.soap.sforce.com", "queryAllResponse");
  private static final QName delete_qname = new QName("urn:enterprise.soap.sforce.com", "delete");
  private static final QName deleteResponse_qname = new QName("urn:enterprise.soap.sforce.com", "deleteResponse");
  private static final QName describeSObjectListViews_qname = new QName("urn:enterprise.soap.sforce.com", "describeSObjectListViews");
  private static final QName describeSObjectListViewsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeSObjectListViewsResponse");
  private static final QName convertLead_qname = new QName("urn:enterprise.soap.sforce.com", "convertLead");
  private static final QName convertLeadResponse_qname = new QName("urn:enterprise.soap.sforce.com", "convertLeadResponse");
  private static final QName describeSoqlListViews_qname = new QName("urn:enterprise.soap.sforce.com", "describeSoqlListViews");
  private static final QName describeSoqlListViewsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeSoqlListViewsResponse");
  private static final QName changeOwnPassword_qname = new QName("urn:enterprise.soap.sforce.com", "changeOwnPassword");
  private static final QName changeOwnPasswordResponse_qname = new QName("urn:enterprise.soap.sforce.com", "changeOwnPasswordResponse");
  private static final QName describeCompactLayouts_qname = new QName("urn:enterprise.soap.sforce.com", "describeCompactLayouts");
  private static final QName describeCompactLayoutsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeCompactLayoutsResponse");
  private static final QName emptyRecycleBin_qname = new QName("urn:enterprise.soap.sforce.com", "emptyRecycleBin");
  private static final QName emptyRecycleBinResponse_qname = new QName("urn:enterprise.soap.sforce.com", "emptyRecycleBinResponse");
  private static final QName describeApprovalLayout_qname = new QName("urn:enterprise.soap.sforce.com", "describeApprovalLayout");
  private static final QName describeApprovalLayoutResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeApprovalLayoutResponse");
  private static final QName describeGlobalTheme_qname = new QName("urn:enterprise.soap.sforce.com", "describeGlobalTheme");
  private static final QName describeGlobalThemeResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeGlobalThemeResponse");
  private static final QName getUserInfo_qname = new QName("urn:enterprise.soap.sforce.com", "getUserInfo");
  private static final QName getUserInfoResponse_qname = new QName("urn:enterprise.soap.sforce.com", "getUserInfoResponse");
  private static final QName describeAppMenu_qname = new QName("urn:enterprise.soap.sforce.com", "describeAppMenu");
  private static final QName describeAppMenuResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeAppMenuResponse");
  private static final QName describeLayout_qname = new QName("urn:enterprise.soap.sforce.com", "describeLayout");
  private static final QName describeLayoutResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeLayoutResponse");
  private static final QName describeSearchableEntities_qname = new QName("urn:enterprise.soap.sforce.com", "describeSearchableEntities");
  private static final QName describeSearchableEntitiesResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeSearchableEntitiesResponse");
  private static final QName describePrimaryCompactLayouts_qname = new QName("urn:enterprise.soap.sforce.com", "describePrimaryCompactLayouts");
  private static final QName describePrimaryCompactLayoutsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describePrimaryCompactLayoutsResponse");
  private static final QName queryMore_qname = new QName("urn:enterprise.soap.sforce.com", "queryMore");
  private static final QName queryMoreResponse_qname = new QName("urn:enterprise.soap.sforce.com", "queryMoreResponse");
  private static final QName describeDataCategoryGroupStructures_qname = new QName("urn:enterprise.soap.sforce.com", "describeDataCategoryGroupStructures");
  private static final QName describeDataCategoryGroupStructuresResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeDataCategoryGroupStructuresResponse");
  private static final QName describeAllTabs_qname = new QName("urn:enterprise.soap.sforce.com", "describeAllTabs");
  private static final QName describeAllTabsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeAllTabsResponse");
  private static final QName describeGlobal_qname = new QName("urn:enterprise.soap.sforce.com", "describeGlobal");
  private static final QName describeGlobalResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeGlobalResponse");
  private static final QName process_qname = new QName("urn:enterprise.soap.sforce.com", "process");
  private static final QName processResponse_qname = new QName("urn:enterprise.soap.sforce.com", "processResponse");
  private static final QName findDuplicates_qname = new QName("urn:enterprise.soap.sforce.com", "findDuplicates");
  private static final QName findDuplicatesResponse_qname = new QName("urn:enterprise.soap.sforce.com", "findDuplicatesResponse");
  private static final QName describeDataCategoryGroups_qname = new QName("urn:enterprise.soap.sforce.com", "describeDataCategoryGroups");
  private static final QName describeDataCategoryGroupsResponse_qname = new QName("urn:enterprise.soap.sforce.com", "describeDataCategoryGroupsResponse");
  private static final QName LoginScopeHeader_qname = new QName("urn:enterprise.soap.sforce.com", "LoginScopeHeader");
  private static final QName AllOrNoneHeader_qname = new QName("urn:enterprise.soap.sforce.com", "AllOrNoneHeader");
  private static final QName MruHeader_qname = new QName("urn:enterprise.soap.sforce.com", "MruHeader");
  private static final QName UserTerritoryDeleteHeader_qname = new QName("urn:enterprise.soap.sforce.com", "UserTerritoryDeleteHeader");
  private static final QName OwnerChangeOptions_qname = new QName("urn:enterprise.soap.sforce.com", "OwnerChangeOptions");
  private static final QName DuplicateRuleHeader_qname = new QName("urn:enterprise.soap.sforce.com", "DuplicateRuleHeader");
  private static final QName StreamingEnabledHeader_qname = new QName("urn:enterprise.soap.sforce.com", "StreamingEnabledHeader");
  private static final QName AllowFieldTruncationHeader_qname = new QName("urn:enterprise.soap.sforce.com", "AllowFieldTruncationHeader");
  private static final QName LimitInfoHeader_qname = new QName("urn:enterprise.soap.sforce.com", "LimitInfoHeader");
  private static final QName DebuggingInfo_qname = new QName("urn:enterprise.soap.sforce.com", "DebuggingInfo");
  private static final QName AssignmentRuleHeader_qname = new QName("urn:enterprise.soap.sforce.com", "AssignmentRuleHeader");
  private static final QName DisableFeedTrackingHeader_qname = new QName("urn:enterprise.soap.sforce.com", "DisableFeedTrackingHeader");
  private static final QName LocaleOptions_qname = new QName("urn:enterprise.soap.sforce.com", "LocaleOptions");
  private static final QName DebuggingHeader_qname = new QName("urn:enterprise.soap.sforce.com", "DebuggingHeader");
  private static final QName PackageVersionHeader_qname = new QName("urn:enterprise.soap.sforce.com", "PackageVersionHeader");
  private static final QName SessionHeader_qname = new QName("urn:enterprise.soap.sforce.com", "SessionHeader");
  private static final QName QueryOptions_qname = new QName("urn:enterprise.soap.sforce.com", "QueryOptions");
  private static final QName EmailHeader_qname = new QName("urn:enterprise.soap.sforce.com", "EmailHeader");
  

  private static HashMap<QName, Class> knownHeaders = new HashMap();
  
  static {
    knownHeaders.put(LoginScopeHeader_qname, LoginScopeHeader_element.class);
    knownHeaders.put(AllOrNoneHeader_qname, AllOrNoneHeader_element.class);
    knownHeaders.put(MruHeader_qname, MruHeader_element.class);
    knownHeaders.put(UserTerritoryDeleteHeader_qname, UserTerritoryDeleteHeader_element.class);
    knownHeaders.put(OwnerChangeOptions_qname, OwnerChangeOptions_element.class);
    knownHeaders.put(DuplicateRuleHeader_qname, DuplicateRuleHeader_element.class);
    knownHeaders.put(StreamingEnabledHeader_qname, StreamingEnabledHeader_element.class);
    knownHeaders.put(AllowFieldTruncationHeader_qname, AllowFieldTruncationHeader_element.class);
    knownHeaders.put(LimitInfoHeader_qname, LimitInfoHeader_element.class);
    knownHeaders.put(DebuggingInfo_qname, DebuggingInfo_element.class);
    knownHeaders.put(AssignmentRuleHeader_qname, AssignmentRuleHeader_element.class);
    knownHeaders.put(DisableFeedTrackingHeader_qname, DisableFeedTrackingHeader_element.class);
    knownHeaders.put(LocaleOptions_qname, LocaleOptions_element.class);
    knownHeaders.put(DebuggingHeader_qname, DebuggingHeader_element.class);
    knownHeaders.put(PackageVersionHeader_qname, PackageVersionHeader_element.class);
    knownHeaders.put(SessionHeader_qname, SessionHeader_element.class);
    knownHeaders.put(QueryOptions_qname, QueryOptions_element.class);
    knownHeaders.put(EmailHeader_qname, EmailHeader_element.class);
  }
}
